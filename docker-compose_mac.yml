version: '3'

services:
  # Database
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: my_database
      MYSQL_ALLOW_EMPTY_PASSWORD: no
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3307:3306"
    volumes:
      - ./SQL/SuperScript.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    
  # Message Queue
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"   # RabbitMQ standard port
      - "15672:15672" # RabbitMQ management console
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Atomic services
  drone:
    build:
      context: ./atomic/drone
    ports:
      - "5006:5006"
    environment:
      dbURL: mysql+mysqlconnector://root:root@db:8889/my_database
    depends_on:
      db:
        condition: service_healthy

  customer:
    build:
      context: ./atomic/customer-service
    ports:
      - "5001:5001"
    environment:
      dbURL: mysql+mysqlconnector://root:root@db:8889/my_database
    depends_on:
      db:
        condition: service_healthy
  
  item:
    build:
      context: ./atomic/item-service
    ports:
      - "5002:5002"
    environment:
      dbURL: mysql+mysqlconnector://root:root@db:8889/my_database
    depends_on:
      db:
        condition: service_healthy

  store:
    build:
      context: ./atomic/store-service
    ports:
      - "5003:5003"
    environment:
      dbURL: mysql+mysqlconnector://root:root@db:8889/my_database
    depends_on:
      db:
        condition: service_healthy

  order:
    build:
      context: ./atomic/order
    ports:
      - "5004:5004"
    environment:
      dbURL: mysql+mysqlconnector://root:root@db:8889/my_database
    depends_on:
      db:
        condition: service_healthy
    
  scheduling:
    build:
      context: ./atomic/scheduling
    ports:
      - "5005:5005"
    environment:
      dbURL: mysql+mysqlconnector://root:root@db:8889/my_database
    depends_on:
      db:
        condition: service_healthy

  notification:
    build:
      context: ./atomic/notification-service
    ports:
      - "5300:5300"
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_QUEUE: notification_queue
    depends_on:
      rabbitmq:
        condition: service_healthy

  # Composite services
  condition-check:
    build:
      context: ./composite/condition-check
    ports:
      - "5100:5100"
    depends_on:
      - drone
      - scheduling

  drone-navigation:
    build:
      context: ./composite/drone-navigation
    ports:
      - "5200:5200"
    depends_on:
      - condition-check
      
  # New Processing Order service
  processing-order:
    build:
      context: ./composite/processing-order
    ports:
      - "5400:5400"
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_QUEUE: notification_queue
    depends_on:
      - order
      - store
      - item
      - drone-navigation
      - rabbitmq
      - notification

networks:
  default:
    name: my_app_network
    driver: bridge